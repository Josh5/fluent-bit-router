#@ Placement
#-  PLACEMENT_CONSTRAINT
#-    Constraint used by Swarm to decide which node runs this container.
#-    Examples:
#-        - node.hostname==<hostname>
#-        - engine.labels.fs-access.<worker-hostname>.mnt==true
#-        - node.role!=manager
PLACEMENT_CONSTRAINT=node.platform.os==linux
#@ Resource Limits
#-  - FLUENTBIT_MEMLIMIT -
#-    Limit Fluent-Bit container memory.
FLUENTBIT_MEMLIMIT=400m
#@ Container Paths
#-  FLUENTBIT_STORAGE_PATH
#-    Host path for Fluent Bit persistent storage (chunks, DB, offsets).
FLUENTBIT_STORAGE_PATH=./appdata/fluent-bit/storage
#-  FLUENTBIT_CERTS_PATH
#-    Host path for TLS certificates (mounted into the container).
FLUENTBIT_CERTS_PATH=./appdata/fluent-bit/certs
#@ Core Fluent-Bit Settings
#-  NGINX_PORT
#-    The port to run the NGINX server on.
NGINX_PORT=3200
#@ Core Fluent-Bit Settings
#-  HOST_HOSTNAME
#-    Hostname used inside Fluent Bit (self_hostname / cert CN where relevant).
HOST_HOSTNAME=fluent-bit-router
#-  FLUENT_BIT_LOG_LEVEL
#-    Log verbosity of Fluent Bit: error | warn | info | debug | trace
FLUENT_BIT_LOG_LEVEL=info
#-  FLUENTBIT_PUBLISHED_HTTP_SERVER_PORT
#-    Host port to publish Fluent Bitâ€™s internal HTTP server (default 2020).
FLUENTBIT_PUBLISHED_HTTP_SERVER_PORT=2020
#-  FLUENT_BIT_TAG_PREFIX
#-    Prefix applied to record tags for filtering/routing.
FLUENT_BIT_TAG_PREFIX=flb.
#@ TLS Certificates
#-  FLUENTBIT_USE_EXISTING_CERT
#-    Use an existing TLS certificate/key instead of generating new ones.
FLUENTBIT_USE_EXISTING_CERT=false
#-  FLUENTBIT_EXISTING_CERT_PATH
#-    Path INSIDE container to existing certificate file.
FLUENTBIT_EXISTING_CERT_PATH=/fluent-bit-data/certs/1.pem
#-  FLUENTBIT_EXISTING_KEY_PATH
#-    Path INSIDE container to existing private key file.
FLUENTBIT_EXISTING_KEY_PATH=/fluent-bit-data/certs/1.key
#-  USE_CERTBOT_TO_GENERATE_KEY
#-    If true, run Certbot to issue a certificate via ACME challenge.
USE_CERTBOT_TO_GENERATE_KEY=false
#-  CERT_FQDN
#-    Fully qualified domain name used for certificate CN.
CERT_FQDN=
#-  CERT_EMAIL
#-    Email address for Certbot registration/renewal.
CERT_EMAIL=
#@ HTTP Input
#-  ENABLE_FLUENTBIT_HTTP_INPUT
#-    Enable Fluent Bit HTTP input listener (ingest logs via HTTP).
ENABLE_FLUENTBIT_HTTP_INPUT=false
#-  FLUENTBIT_HTTP_INPUT_PORT
#-    Container port for HTTP input (default 24280).
FLUENTBIT_HTTP_INPUT_PORT=24280
#@ Forward TLS Input
#-  ENABLE_FLUENTBIT_TLS_FORWARD_INPUT
#-    Enable TLS-secured Forward input for receiving logs.
ENABLE_FLUENTBIT_TLS_FORWARD_INPUT=false
#-  FLUENTBIT_TLS_FORWARD_INPUT_PORT
#-    Container port for TLS Forward input (default 24224).
FLUENTBIT_TLS_FORWARD_INPUT_PORT=24224
#-  FLUENTBIT_TLS_FORWARD_INPUT_SHARED_KEY
#-    Shared key required for TLS Forward authentication.
FLUENTBIT_TLS_FORWARD_INPUT_SHARED_KEY=123456789
#-  FLUENTBIT_TLS_FORWARD_INPUT_VERIFY
#-    Verify client certificates? on|off (default: off).
FLUENTBIT_TLS_FORWARD_INPUT_VERIFY=off
#@ Forward Plaintext Input
#-  ENABLE_FLUENTBIT_PT_FORWARD_INPUT
#-    Enable plaintext Forward input (unsecured).
ENABLE_FLUENTBIT_PT_FORWARD_INPUT=false
#-  FLUENTBIT_PT_FORWARD_INPUT_PORT
#-    Container port for plaintext Forward input (default 24228).
FLUENTBIT_PT_FORWARD_INPUT_PORT=24228
#@ Forward Plaintext Input
#-  ENABLE_FLUENTBIT_STDOUT_OUTPUT
#-    Enable STDOUT output.
ENABLE_FLUENTBIT_STDOUT_OUTPUT=false
#@ Forward TLS Output
#-  ENABLE_FLUENTBIT_TLS_FORWARD_OUTPUT
#-    Enable sending logs to an upstream Fluent Bit/Fluentd via TLS Forward.
ENABLE_FLUENTBIT_TLS_FORWARD_OUTPUT=false
#-  FLUENTBIT_TLS_FORWARD_OUTPUT_HOST
#-    Hostname of the upstream TLS Forward receiver.
FLUENTBIT_TLS_FORWARD_OUTPUT_HOST=
#-  FLUENTBIT_TLS_FORWARD_OUTPUT_PORT
#-    Port of the upstream TLS Forward receiver.
FLUENTBIT_TLS_FORWARD_OUTPUT_PORT=
#-  FLUENTBIT_TLS_FORWARD_OUTPUT_SHARED_KEY
#-    Shared key for authenticating with upstream TLS Forward.
FLUENTBIT_TLS_FORWARD_OUTPUT_SHARED_KEY=
#-  FLUENTBIT_TLS_FORWARD_OUTPUT_VERIFY
#-    Verify TLS certificates from the upstream server? on|off.
FLUENTBIT_TLS_FORWARD_OUTPUT_VERIFY=off
#@ Forward Plaintext Output
#-  ENABLE_FLUENTBIT_PT_FORWARD_OUTPUT
#-    Enable sending logs to an upstream Fluent Bit/Fluentd via plaintext Forward.
ENABLE_FLUENTBIT_PT_FORWARD_OUTPUT=false
#-  FLUENTBIT_PT_FORWARD_OUTPUT_HOST
#-    Hostname of the upstream plaintext Forward receiver.
FLUENTBIT_PT_FORWARD_OUTPUT_HOST=
#-  FLUENTBIT_PT_FORWARD_OUTPUT_PORT
#-    Port of the upstream plaintext Forward receiver.
FLUENTBIT_PT_FORWARD_OUTPUT_PORT=
#@ Grafana Loki Output
#-  ENABLE_FLUENTBIT_GRAFANA_LOKI_OUTPUT
#-    Enable output to Grafana Loki.
ENABLE_FLUENTBIT_GRAFANA_LOKI_OUTPUT=false
#-  GRAFANA_LOKI_HOST
#-    Hostname/service of the Loki gateway (inside the Swarm network).
GRAFANA_LOKI_HOST=loki
#-  GRAFANA_LOKI_PORT
#-    Loki HTTP port (default: 3100).
GRAFANA_LOKI_PORT=3100
#-  GRAFANA_LOKI_URI
#-    Loki push path (default: /loki/api/v1/push).
GRAFANA_LOKI_URI=/loki/api/v1/push
#@ Graylog GELF Output
#-  ENABLE_GRAYLOG_GELF_OUTPUT
#-    Enable sending logs to Graylog via GELF.
ENABLE_GRAYLOG_GELF_OUTPUT=false
#-  GRAYLOG_GELF_HOST
#-    Hostname or service name of the Graylog GELF input.
GRAYLOG_GELF_HOST=graylog
#-  GRAYLOG_GELF_PORT
#-    Port of the Graylog GELF input (usually 12201).
GRAYLOG_GELF_PORT=12201
#-  GRAYLOG_GELF_MODE
#-    Transport protocol for GELF: tcp | udp (default: tcp).
GRAYLOG_GELF_MODE=tcp
#@ S3 Cold Storage Output
#-  ENABLE_S3_BUCKET_COLD_STORAGE_OUTPUT
#-    Enable archiving logs to an S3 bucket (credentials must be provided by the runtime, e.g., env/role).
ENABLE_S3_BUCKET_COLD_STORAGE_OUTPUT=false
#-  AWS_COLD_STORAGE_BUCKET_NAME
#-    Name of the S3 bucket used for cold storage.
AWS_COLD_STORAGE_BUCKET_NAME=
#-  AWS_COLD_STORAGE_BUCKET_REGION
#-    AWS region of the S3 bucket (e.g., ap-southeast-2).
AWS_COLD_STORAGE_BUCKET_REGION=
